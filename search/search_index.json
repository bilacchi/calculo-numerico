{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"C\u00e1lculo Num\u00e9rico \u00b6 C\u00e1lculo Num\u00e9rico \u00e9 uma introdu\u00e7\u00e3o a computa\u00e7\u00e3o matem\u00e1tica incluindo: Jupyter notebooks, markdown e \\LaTeX \\LaTeX . Python b\u00e1sico: tipos, l\u00f3gicas, fun\u00e7\u00f5es e vetoriza\u00e7\u00e3o. Computa\u00e7\u00e3o cient\u00edfica com NumPy , SciPy , Matplotlib e Pandas . Aplica\u00e7\u00e3o de c\u00e1lculo, algebra linear e equa\u00e7\u00f5es diferenciais. Jupyter Notebooks \u00b6 C\u00e1lculo Num\u00e9rico tamb\u00e9m \u00e9 uma cole\u00e7\u00e3o de Jupyter Notebooks e est\u00e3o dispon\u00edveis em: github.com/Cristianobam/calculo-numerico Recomenda\u00e7\u00f5es \u00b6 A an\u00e1lise num\u00e9rica depende principalmente de \u00e1lgebra linear, c\u00e1lculo diferencial, c\u00e1lculo integral e equa\u00e7\u00f5es diferenciais. \u00c1lgebra Linear : Voc\u00ea precisar\u00e1 de um bom entendimento de algebra linear para prosseguir facilmente pelo curso. Uma boa compreens\u00e3o de \u00e1lgebra linear possibilita uma melhor manipula\u00e7\u00e3o de dados quantitativos envolvendo mais de um n\u00famero por vez. Voc\u00ea precisa saber opera\u00e7\u00f5es de soma e multiplica\u00e7\u00e3o de vetores e matrizes, al\u00e9m de determinantes, inversas, autovalores. Uma recomenda\u00e7\u00e3o para esse t\u00f3pico \u00e9 a excelente s\u00e9rie A Ess\u00eancia da Algebra Linear . Alguns exerc\u00edcios est\u00e3o dispon\u00edveis no Reposit\u00f3rios de Notebooks . C\u00e1lculo Diferencial : C\u00e1lculo b\u00e1sico tamb\u00e9m \u00e9 crucial. Voc\u00ea precisa saber o que derivadas e integrais s\u00e3o, e entender o que uma equa\u00e7\u00e3o diferencial significa. Se voc\u00ea precisar refrescar c\u00e1lculo diferencial e integral assista a s\u00e9rie A Ess\u00eancia do C\u00e1lculo e estude as notas de aula do prof\u00ba Dr. Rodrigo Fresneda ( \"C\u00e1lculo Diferencial\" e \"C\u00e1lculo Integral\" ). Para equa\u00e7\u00f5es diferenciais recomendo os cap\u00edtulos 0-1 (incluindo os exerc\u00edcios) do livro de Jiri Lebl \"Differential Equation for Engineers\" . Conte\u00fado \u00b6 C\u00e1lculo Diferencial : Derivada de fun\u00e7\u00f5es elementares, s\u00e9ries de Taylor e otimiza\u00e7\u00e3o. C\u00e1lculo Integral : Somas de Riemann, comprimento de arco . \u00c1lgebra Linear : opera\u00e7\u00f5es vetoriais e matriciais, sistema de equa\u00e7\u00f5es, autovalores e autovetores. Equa\u00e7\u00f5es Diferenciais : M\u00e9todo de Euler para equa\u00e7\u00f5es diferenciais de primeira ordem, sistemas lineares de EDOs. Autor \u00b6 Cristiano M B Azarias \u00e9 bacharelando em engenharia de instrumenta\u00e7\u00e3o, automa\u00e7\u00e3o e rob\u00f3tica e tamb\u00e9m bacharelando em neuroci\u00eancia na Universidade Federal do ABC . Pesquisador no Timing and Cognition Lab na \u00e1rea de cogni\u00e7\u00e3o e tempo. Coment\u00e1rios e Sugest\u00f5es \u00b6 Coment\u00e1rios e sugest\u00f5es s\u00e3o sempre muito bem-vindas. Por favor, entre em contato por e-mail , fa\u00e7a um pull request ou ainda abra uma issue no reposit\u00f3rio do Github . Conven\u00e7\u00f5es \u00b6 Aten\u00e7\u00e3o Esses blocos representam informa\u00e7\u00f5es importantes a respeito do que est\u00e1 sendo discutido na se\u00e7\u00e3o. N\u00e3o pule esses blocos. Bug Erros poss\u00edveis que acontecer\u00e3o no c\u00f3digo e como tentar resolver. Dicas Sugest\u00f5es e dicas sobre o conte\u00fado ou sobre o c\u00f3digo. Geralmente ser\u00e3o otimiza\u00e7\u00f5es, pule se quiser. Exemplos / Exerc\u00edcios S\u00e3o exemplos e sugest\u00f5es para serem resolvidos. N\u00e3o pule esse bloco. Hist\u00f3ria Essa parte \u00e9 hist\u00f3ria. Leia caso esteja se interessando s\u00f3 pela beleza da coisa.","title":"In\u00edcio"},{"location":"#calculo-numerico","text":"C\u00e1lculo Num\u00e9rico \u00e9 uma introdu\u00e7\u00e3o a computa\u00e7\u00e3o matem\u00e1tica incluindo: Jupyter notebooks, markdown e \\LaTeX \\LaTeX . Python b\u00e1sico: tipos, l\u00f3gicas, fun\u00e7\u00f5es e vetoriza\u00e7\u00e3o. Computa\u00e7\u00e3o cient\u00edfica com NumPy , SciPy , Matplotlib e Pandas . Aplica\u00e7\u00e3o de c\u00e1lculo, algebra linear e equa\u00e7\u00f5es diferenciais.","title":"C\u00e1lculo Num\u00e9rico"},{"location":"#jupyter-notebooks","text":"C\u00e1lculo Num\u00e9rico tamb\u00e9m \u00e9 uma cole\u00e7\u00e3o de Jupyter Notebooks e est\u00e3o dispon\u00edveis em: github.com/Cristianobam/calculo-numerico","title":"Jupyter Notebooks"},{"location":"#recomendacoes","text":"A an\u00e1lise num\u00e9rica depende principalmente de \u00e1lgebra linear, c\u00e1lculo diferencial, c\u00e1lculo integral e equa\u00e7\u00f5es diferenciais. \u00c1lgebra Linear : Voc\u00ea precisar\u00e1 de um bom entendimento de algebra linear para prosseguir facilmente pelo curso. Uma boa compreens\u00e3o de \u00e1lgebra linear possibilita uma melhor manipula\u00e7\u00e3o de dados quantitativos envolvendo mais de um n\u00famero por vez. Voc\u00ea precisa saber opera\u00e7\u00f5es de soma e multiplica\u00e7\u00e3o de vetores e matrizes, al\u00e9m de determinantes, inversas, autovalores. Uma recomenda\u00e7\u00e3o para esse t\u00f3pico \u00e9 a excelente s\u00e9rie A Ess\u00eancia da Algebra Linear . Alguns exerc\u00edcios est\u00e3o dispon\u00edveis no Reposit\u00f3rios de Notebooks . C\u00e1lculo Diferencial : C\u00e1lculo b\u00e1sico tamb\u00e9m \u00e9 crucial. Voc\u00ea precisa saber o que derivadas e integrais s\u00e3o, e entender o que uma equa\u00e7\u00e3o diferencial significa. Se voc\u00ea precisar refrescar c\u00e1lculo diferencial e integral assista a s\u00e9rie A Ess\u00eancia do C\u00e1lculo e estude as notas de aula do prof\u00ba Dr. Rodrigo Fresneda ( \"C\u00e1lculo Diferencial\" e \"C\u00e1lculo Integral\" ). Para equa\u00e7\u00f5es diferenciais recomendo os cap\u00edtulos 0-1 (incluindo os exerc\u00edcios) do livro de Jiri Lebl \"Differential Equation for Engineers\" .","title":"Recomenda\u00e7\u00f5es"},{"location":"#conteudo","text":"C\u00e1lculo Diferencial : Derivada de fun\u00e7\u00f5es elementares, s\u00e9ries de Taylor e otimiza\u00e7\u00e3o. C\u00e1lculo Integral : Somas de Riemann, comprimento de arco . \u00c1lgebra Linear : opera\u00e7\u00f5es vetoriais e matriciais, sistema de equa\u00e7\u00f5es, autovalores e autovetores. Equa\u00e7\u00f5es Diferenciais : M\u00e9todo de Euler para equa\u00e7\u00f5es diferenciais de primeira ordem, sistemas lineares de EDOs.","title":"Conte\u00fado"},{"location":"#autor","text":"Cristiano M B Azarias \u00e9 bacharelando em engenharia de instrumenta\u00e7\u00e3o, automa\u00e7\u00e3o e rob\u00f3tica e tamb\u00e9m bacharelando em neuroci\u00eancia na Universidade Federal do ABC . Pesquisador no Timing and Cognition Lab na \u00e1rea de cogni\u00e7\u00e3o e tempo.","title":"Autor"},{"location":"#comentarios-e-sugestoes","text":"Coment\u00e1rios e sugest\u00f5es s\u00e3o sempre muito bem-vindas. Por favor, entre em contato por e-mail , fa\u00e7a um pull request ou ainda abra uma issue no reposit\u00f3rio do Github .","title":"Coment\u00e1rios e Sugest\u00f5es"},{"location":"#convencoes","text":"Aten\u00e7\u00e3o Esses blocos representam informa\u00e7\u00f5es importantes a respeito do que est\u00e1 sendo discutido na se\u00e7\u00e3o. N\u00e3o pule esses blocos. Bug Erros poss\u00edveis que acontecer\u00e3o no c\u00f3digo e como tentar resolver. Dicas Sugest\u00f5es e dicas sobre o conte\u00fado ou sobre o c\u00f3digo. Geralmente ser\u00e3o otimiza\u00e7\u00f5es, pule se quiser. Exemplos / Exerc\u00edcios S\u00e3o exemplos e sugest\u00f5es para serem resolvidos. N\u00e3o pule esse bloco. Hist\u00f3ria Essa parte \u00e9 hist\u00f3ria. Leia caso esteja se interessando s\u00f3 pela beleza da coisa.","title":"Conven\u00e7\u00f5es"},{"location":"jupyter/latex/","text":"LaTeX \u00b6 O LaTeX \u00e9 um sistema de escrita de alta qualidade. Aqui vamos fazer um apanhado geral de como come\u00e7ar a escrever no LaTeX. Os Jupyter Notebook reconhecem o c\u00f3digo LaTeX escrito no markdown e ent\u00e3o renderiza todos os s\u00edmbolos no navegador utilizando MathJax . O Mathjax \u00e9 um m\u00f3dulo JavaScript , logo mantenha JS habilitado. Express\u00f5es Matem\u00e1ticas \u00b6 Para escrever express\u00f5es na mesma linha que os textos, voc\u00ea precisa cercar o c\u00f3digo LaTeX com cifr\u00f5es $ ... $ . Por exemplo, o c\u00f3digo $\\frac{d}{dx}\\displaystyle\\int_0^x f(t) dt = f(x)$ aparecer\u00e1 na linha como \\frac{d}{dx}\\displaystyle\\int_0^x f(t) dt = f(x) \\frac{d}{dx}\\displaystyle\\int_0^x f(t) dt = f(x) . Para quebrar a linha e centralizar a express\u00e3o matem\u00e1tica, cerque o c\u00f3digo com dois cifr\u00f5es $$ ... $$ . Por exemplo, a transformada de Laplace, $$ \\mathcal {L} \\{ f ( t ) \\} = \\int _ 0 ^{ + \\infty }e^{ - st}f ( t ) dt $$ renderizar\u00e1 como: \\mathcal{L}\\{f(t)\\} = \\int_0^{+\\infty}e^{-st}f(t)dt \\mathcal{L}\\{f(t)\\} = \\int_0^{+\\infty}e^{-st}f(t)dt Veja a WikiBook LaTeX para mais informa\u00e7\u00f5es. S\u00edmbolos Recorrentes \u00b6 A seguir voc\u00ea ver\u00e1 uma pequena lista com os s\u00edmbolos matem\u00e1ticos mais usados. A grande maioria dos s\u00edmbolos pode ser adivinhada somente traduzindo o nome como voc\u00ea ver\u00e1. Voc\u00ea ainda pode usar o Detexify para achar os s\u00edmbolos que procura. Sintaxe S\u00edmbolo $x_n$ x_n x_n $x_{n+1}$ x_{n+1} x_{n+1} $x^2$ x^2 x^2 $\\infty$ \\infty \\infty $dfrac{d}{dx}$ \\dfrac{a}{b} \\dfrac{a}{b} $\\partial$ \\partial \\partial $\\alpha$ \\alpha \\alpha $\\beta$ \\beta \\beta $\\gamma$ \\gamma \\gamma $\\Delta$ \\Delta \\Delta $\\nabla$ \\nabla \\nabla $\\sin$ \\sin \\sin $\\cos$ \\cos \\cos $\\tan$ \\tan \\tan $\\sum_{n=0}^{\\infty}$ \\sum_{n=0}^{\\infty} \\sum_{n=0}^{\\infty} $\\prod_{n=0}^{\\infty}$$ \\prod_{n=0}^{\\infty} \\prod_{n=0}^{\\infty} $ $\\int_a^b$ \\displaystyle\\int_a^b \\displaystyle\\int_a^b $\\lim_{x \\to a}$ \\lim_{x \\to a} \\lim_{x \\to a} $\\mathrm{IV}$ \\mathrm{IV} \\mathrm{IV} $\\mathbb{Z}$ \\mathbb{Z} \\mathbb{Z} $\\mathscr{L}$ \\mathscr{L} \\mathscr{L} $\\dots$ \\dots \\dots $\\vdots$ \\vdots \\vdots $\\ddots$ \\ddots \\ddots $\\cdot$ \\cdot \\cdot $\\times$ \\times \\times Matrizes e Par\u00eanteses \u00b6 Use \\left e \\right para que os par\u00eanteses abranjam completamente as express\u00f5es: $$ \\left ( \\dfrac {p}{q} \\right ) $$ \\left(\\dfrac{p}{q}\\right) \\left(\\dfrac{p}{q}\\right) Para matrizes com par\u00eanteses redondos: $$ \\begin {pmatrix} a & b \\\\ c & d \\end {pmatrix} $$ \\begin{pmatrix} a & b \\\\ c & d \\end{pmatrix} \\begin{pmatrix} a & b \\\\ c & d \\end{pmatrix} De Olho na Sintaxe Note que usamos \\begin{environment} ... \\end{environment} para habilitar um ambiente LaTeX. Esses ambientes fornecem maiores possibilidades no LaTeX. O \"E\" comercial (&) \u00e9 usado para indicar uma quebra de coluna e a dupla contra barra (\\\\) para indicar uma quebra de linha. Para matrizes com par\u00eanteses quadrados: $$ \\begin {bmatrix} a & b & c \\\\ d & e & f \\\\ g & h & i \\end {bmatrix} $$ \\begin{bmatrix} a & b & c \\\\ d & e & f \\\\ g & h & i \\end{bmatrix} \\begin{bmatrix} a & b & c \\\\ d & e & f \\\\ g & h & i \\end{bmatrix} Exemplos \u00b6 Derivada \u00b6 A derivada de f(x) f(x) avaliada em x=a x=a $$ f^ \\prime ( a ) = \\lim _{x \\to a} \\frac {f ( x ) - f ( a ) }{x - a} = \\frac {df ( x ) }{dx} \\vert _{x = a} $$ f^\\prime(a) = \\lim_{x \\to a} \\frac{f(x) - f(a)}{x - a} = \\frac{df(x)}{dx}\\vert_{x=a} f^\\prime(a) = \\lim_{x \\to a} \\frac{f(x) - f(a)}{x - a} = \\frac{df(x)}{dx}\\vert_{x=a} Polin\u00f4mio de Taylor \u00b6 O polin\u00f4mio de Taylor calculado entorno de a. $$ f ( x; x = a ) \\approx f ( a ) + f^ \\prime ( a ) \\frac { ( x - a ) }{ 1 ! } + f^{ \\prime\\prime } ( a ) \\frac { ( x - a ) ^ 2 }{ 2 ! } + \\dots + f^{ ( n ) } ( a ) \\frac { ( x - a ) ^n}{n ! } $$ f(x; x=a) \\approx f(a) + f^\\prime(a)\\frac{(x-a)}{1!} + f^{\\prime\\prime}(a)\\frac{(x-a)^2}{2!} + \\dots + f^{(n)}(a)\\frac{(x-a)^n}{n!} f(x; x=a) \\approx f(a) + f^\\prime(a)\\frac{(x-a)}{1!} + f^{\\prime\\prime}(a)\\frac{(x-a)^2}{2!} + \\dots + f^{(n)}(a)\\frac{(x-a)^n}{n!} A transformada de Fourier \u00b6 A transformada de Fourier da fun\u00e7\u00e3o f(x) $$ F ( \\omega ) = \\int _{ - \\infty }^{ + \\infty } f ( t ) e^{ - j \\omega t} dt $$ F(\\omega) = \\displaystyle\\int_{-\\infty}^{+\\infty} f(t)e^{-j\\omega t} dt F(\\omega) = \\displaystyle\\int_{-\\infty}^{+\\infty} f(t)e^{-j\\omega t} dt Nota\u00e7\u00f5es Por conven\u00e7\u00e3o, na engenharia costuma-se usar j=\\sqrt{-1} j=\\sqrt{-1} ao inv\u00e9s de i i . Isso acontece, pois na engenharia i i ou I I s\u00e3o nota\u00e7\u00f5es de corrente. Exerc\u00edcios \u00b6 Fa\u00e7a a demonstra\u00e7\u00e3o, usando LaTeX, de \\cos^2{(x)} = \\dfrac{1 + \\cos{(2x)}}{2} \\cos^2{(x)} = \\dfrac{1 + \\cos{(2x)}}{2} Escreva o polin\u00f4mio de Taylor de grau 6, usando LaTeX, para f(x) = \\sin{(x)} f(x) = \\sin{(x)}","title":"LaTeX"},{"location":"jupyter/latex/#latex","text":"O LaTeX \u00e9 um sistema de escrita de alta qualidade. Aqui vamos fazer um apanhado geral de como come\u00e7ar a escrever no LaTeX. Os Jupyter Notebook reconhecem o c\u00f3digo LaTeX escrito no markdown e ent\u00e3o renderiza todos os s\u00edmbolos no navegador utilizando MathJax . O Mathjax \u00e9 um m\u00f3dulo JavaScript , logo mantenha JS habilitado.","title":"LaTeX"},{"location":"jupyter/latex/#expressoes-matematicas","text":"Para escrever express\u00f5es na mesma linha que os textos, voc\u00ea precisa cercar o c\u00f3digo LaTeX com cifr\u00f5es $ ... $ . Por exemplo, o c\u00f3digo $\\frac{d}{dx}\\displaystyle\\int_0^x f(t) dt = f(x)$ aparecer\u00e1 na linha como \\frac{d}{dx}\\displaystyle\\int_0^x f(t) dt = f(x) \\frac{d}{dx}\\displaystyle\\int_0^x f(t) dt = f(x) . Para quebrar a linha e centralizar a express\u00e3o matem\u00e1tica, cerque o c\u00f3digo com dois cifr\u00f5es $$ ... $$ . Por exemplo, a transformada de Laplace, $$ \\mathcal {L} \\{ f ( t ) \\} = \\int _ 0 ^{ + \\infty }e^{ - st}f ( t ) dt $$ renderizar\u00e1 como: \\mathcal{L}\\{f(t)\\} = \\int_0^{+\\infty}e^{-st}f(t)dt \\mathcal{L}\\{f(t)\\} = \\int_0^{+\\infty}e^{-st}f(t)dt Veja a WikiBook LaTeX para mais informa\u00e7\u00f5es.","title":"Express\u00f5es Matem\u00e1ticas"},{"location":"jupyter/latex/#simbolos-recorrentes","text":"A seguir voc\u00ea ver\u00e1 uma pequena lista com os s\u00edmbolos matem\u00e1ticos mais usados. A grande maioria dos s\u00edmbolos pode ser adivinhada somente traduzindo o nome como voc\u00ea ver\u00e1. Voc\u00ea ainda pode usar o Detexify para achar os s\u00edmbolos que procura. Sintaxe S\u00edmbolo $x_n$ x_n x_n $x_{n+1}$ x_{n+1} x_{n+1} $x^2$ x^2 x^2 $\\infty$ \\infty \\infty $dfrac{d}{dx}$ \\dfrac{a}{b} \\dfrac{a}{b} $\\partial$ \\partial \\partial $\\alpha$ \\alpha \\alpha $\\beta$ \\beta \\beta $\\gamma$ \\gamma \\gamma $\\Delta$ \\Delta \\Delta $\\nabla$ \\nabla \\nabla $\\sin$ \\sin \\sin $\\cos$ \\cos \\cos $\\tan$ \\tan \\tan $\\sum_{n=0}^{\\infty}$ \\sum_{n=0}^{\\infty} \\sum_{n=0}^{\\infty} $\\prod_{n=0}^{\\infty}$$ \\prod_{n=0}^{\\infty} \\prod_{n=0}^{\\infty} $ $\\int_a^b$ \\displaystyle\\int_a^b \\displaystyle\\int_a^b $\\lim_{x \\to a}$ \\lim_{x \\to a} \\lim_{x \\to a} $\\mathrm{IV}$ \\mathrm{IV} \\mathrm{IV} $\\mathbb{Z}$ \\mathbb{Z} \\mathbb{Z} $\\mathscr{L}$ \\mathscr{L} \\mathscr{L} $\\dots$ \\dots \\dots $\\vdots$ \\vdots \\vdots $\\ddots$ \\ddots \\ddots $\\cdot$ \\cdot \\cdot $\\times$ \\times \\times","title":"S\u00edmbolos Recorrentes"},{"location":"jupyter/latex/#matrizes-e-parenteses","text":"Use \\left e \\right para que os par\u00eanteses abranjam completamente as express\u00f5es: $$ \\left ( \\dfrac {p}{q} \\right ) $$ \\left(\\dfrac{p}{q}\\right) \\left(\\dfrac{p}{q}\\right) Para matrizes com par\u00eanteses redondos: $$ \\begin {pmatrix} a & b \\\\ c & d \\end {pmatrix} $$ \\begin{pmatrix} a & b \\\\ c & d \\end{pmatrix} \\begin{pmatrix} a & b \\\\ c & d \\end{pmatrix} De Olho na Sintaxe Note que usamos \\begin{environment} ... \\end{environment} para habilitar um ambiente LaTeX. Esses ambientes fornecem maiores possibilidades no LaTeX. O \"E\" comercial (&) \u00e9 usado para indicar uma quebra de coluna e a dupla contra barra (\\\\) para indicar uma quebra de linha. Para matrizes com par\u00eanteses quadrados: $$ \\begin {bmatrix} a & b & c \\\\ d & e & f \\\\ g & h & i \\end {bmatrix} $$ \\begin{bmatrix} a & b & c \\\\ d & e & f \\\\ g & h & i \\end{bmatrix} \\begin{bmatrix} a & b & c \\\\ d & e & f \\\\ g & h & i \\end{bmatrix}","title":"Matrizes e Par\u00eanteses"},{"location":"jupyter/latex/#exemplos","text":"","title":"Exemplos"},{"location":"jupyter/latex/#derivada","text":"A derivada de f(x) f(x) avaliada em x=a x=a $$ f^ \\prime ( a ) = \\lim _{x \\to a} \\frac {f ( x ) - f ( a ) }{x - a} = \\frac {df ( x ) }{dx} \\vert _{x = a} $$ f^\\prime(a) = \\lim_{x \\to a} \\frac{f(x) - f(a)}{x - a} = \\frac{df(x)}{dx}\\vert_{x=a} f^\\prime(a) = \\lim_{x \\to a} \\frac{f(x) - f(a)}{x - a} = \\frac{df(x)}{dx}\\vert_{x=a}","title":"Derivada"},{"location":"jupyter/latex/#polinomio-de-taylor","text":"O polin\u00f4mio de Taylor calculado entorno de a. $$ f ( x; x = a ) \\approx f ( a ) + f^ \\prime ( a ) \\frac { ( x - a ) }{ 1 ! } + f^{ \\prime\\prime } ( a ) \\frac { ( x - a ) ^ 2 }{ 2 ! } + \\dots + f^{ ( n ) } ( a ) \\frac { ( x - a ) ^n}{n ! } $$ f(x; x=a) \\approx f(a) + f^\\prime(a)\\frac{(x-a)}{1!} + f^{\\prime\\prime}(a)\\frac{(x-a)^2}{2!} + \\dots + f^{(n)}(a)\\frac{(x-a)^n}{n!} f(x; x=a) \\approx f(a) + f^\\prime(a)\\frac{(x-a)}{1!} + f^{\\prime\\prime}(a)\\frac{(x-a)^2}{2!} + \\dots + f^{(n)}(a)\\frac{(x-a)^n}{n!}","title":"Polin\u00f4mio de Taylor"},{"location":"jupyter/latex/#a-transformada-de-fourier","text":"A transformada de Fourier da fun\u00e7\u00e3o f(x) $$ F ( \\omega ) = \\int _{ - \\infty }^{ + \\infty } f ( t ) e^{ - j \\omega t} dt $$ F(\\omega) = \\displaystyle\\int_{-\\infty}^{+\\infty} f(t)e^{-j\\omega t} dt F(\\omega) = \\displaystyle\\int_{-\\infty}^{+\\infty} f(t)e^{-j\\omega t} dt Nota\u00e7\u00f5es Por conven\u00e7\u00e3o, na engenharia costuma-se usar j=\\sqrt{-1} j=\\sqrt{-1} ao inv\u00e9s de i i . Isso acontece, pois na engenharia i i ou I I s\u00e3o nota\u00e7\u00f5es de corrente.","title":"A transformada de Fourier"},{"location":"jupyter/latex/#exercicios","text":"Fa\u00e7a a demonstra\u00e7\u00e3o, usando LaTeX, de \\cos^2{(x)} = \\dfrac{1 + \\cos{(2x)}}{2} \\cos^2{(x)} = \\dfrac{1 + \\cos{(2x)}}{2} Escreva o polin\u00f4mio de Taylor de grau 6, usando LaTeX, para f(x) = \\sin{(x)} f(x) = \\sin{(x)}","title":"Exerc\u00edcios"},{"location":"jupyter/markdown/","text":"Markdown \u00b6 Markdown \u00e9 uma linguagem de marca\u00e7\u00e3o com uma sintaxe bem pr\u00f3xima a linguagem humanas natural (portugu\u00eas, ingl\u00eas, fr\u00e2nces e etc). Os Jupyter notebooks reconhecem o markdown e o processam em HTML. Nessa se\u00e7\u00e3o, voc\u00ea ser\u00e1 apresentado a algumas caracter\u00edsticas do Markdown. Veja o guia do Github para mais informa\u00e7\u00f5es. Info Existem algumas ferramentas como o Pandoc que funcionam como conversores de arquivos. Na academia, leia-se universidades, \u00e9 comum o uso do LaTeX para cria\u00e7\u00e3o de slides, contudo a cria\u00e7\u00e3o dos chamados beamers \u00e9 lenta e relativamente trabalhosa. Para solucionar esse problema e ainda permitir slides de alta qualidade, algumas pessoas escrevem suas apresenta\u00e7\u00f5es em markdown e depois as convertem para .tex e .pdf . Texto \u00b6 Sa\u00edda Sintaxe it\u00e1lico *it\u00e1lico* negrito **negrito** c\u00f3digo `c\u00f3digo` Cabe\u00e7alhos (Headings) \u00b6 Sintaxe HTML Sa\u00edda # Cabe\u00e7alho 1 <h1> Cabe\u00e7alho 1 </h1> Cabe\u00e7alho 1 ## Cabe\u00e7alho 2 <h1> Cabe\u00e7alho 1 </h1> Cabe\u00e7alho 2 ### Cabe\u00e7alho 3 <h1> Cabe\u00e7alho 1 </h1> Cabe\u00e7alho 3 #### Cabe\u00e7alho 4 <h1> Cabe\u00e7alho 1 </h1> Cabe\u00e7alho 4 ##### Cabe\u00e7alho 5 <h1> Cabe\u00e7alho 1 </h1> Cabe\u00e7alho 5 ##### Cabe\u00e7alho 6 <h1> Cabe\u00e7alho 1 </h1> Cabe\u00e7alho 6 Como voc\u00ea poder ver, os octothorpes no markdown \u00e9 que mandam no n\u00edvel da se\u00e7\u00e3o e nas tabelas de conte\u00fados (sum\u00e1rios). Listas \u00b6 As listas podem ser divididas em: listas ordenadas e listas n\u00e3o-ordenadas. Listas N\u00e3o-Ordenadas \u00b6 Para criar uma lista ordenada basta adicionar um n\u00famero seguido de um ponto. Os n\u00fameros n\u00e3o precisam seguir uma ordem, mas devem iniciar com o n\u00famero um. Aumente a indenta\u00e7\u00e3o para criar sub-listas. Sintaxe HTML Sa\u00edda 1. Primeiro item 2. Segundo item 3. Terceiro item 4. Quarto item <ol> <li>Primeiro item</li> <li>Segundo item</li> <li>Terceiro item</li> <li>Quarto item</li> </ol> Primeiro item Segundo item Terceiro item Quarto item 1. Primeiro item 1. Segundo item 1. Terceiro item 1. Quarto item <ol> <li>Primeiro item</li> <li>Segundo item</li> <li>Terceiro item</li> <li>Quarto item</li> </ol> Primeiro item Segundo item Terceiro item Quarto item 1. Primeiro item 8. Segundo item 3. Terceiro item 5. Quarto item <ol> <li>Primeiro item</li> <li>Segundo item</li> <li>Terceiro item</li> <li>Quarto item</li> </ol> Primeiro item Segundo item Terceiro item Quarto item 1. Primeiro item 2. Segundo item 3. Terceiro item 1. Sub-item 2. Sub-item 4. Quarto item <ol> <li>Primeiro item</li> <li>Segundo item</li> <li>Terceiro item <ol> <li>Sub-item</li> <li>Sub-item</li> </ol> </li> <li>Quarto item</li> </ol> Primeiro item Segundo item Terceiro item Sub-item Sub-item Quarto item Listas Ordenadas \u00b6 Para criar listas n\u00e3o-ordenadas basta adicionar tra\u00e7os (-), asteriscos (*), ou s\u00edmbolos de mais (+) antes dos itens. Aumente a indenta\u00e7\u00e3o para criar sub-listas. Markdown HTML Rendered Output - Primeiro item - Segundo item - Terceiro item - Quarto item <ul> <li>Primeiro item</li> <li>Segundo item</li> <li>Terceiro item</li> <li>Quarto item</li> </ul> Primeiro item Segundo item Terceiro item Quarto item * Primeiro item * Segundo item * Terceiro item * Quarto item <ul> <li>Primeiro item</li> <li>Segundo item</li> <li>Terceiro item</li> <li>Quarto item</li> </ul> Primeiro item Segundo item Terceiro item Quarto item + Primeiro item * Segundo item - Terceiro item + Quarto item <ul> <li>Primeiro item</li> <li>Segundo item</li> <li>Terceiro item</li> <li>Quarto item</li> </ul> Primeiro item Segundo item Terceiro item Quarto item - Primeiro item - Segundo item - Terceiro item - Sub-item - Sub-item - Quarto item <ul> <li>Primeiro item</li> <li>Segundo item</li> <li>Terceiro item <ul> <li>Sub-item</li> <li>Sub-item</li> </ul> </li> <li>Quarto item</li> </ul> Primeiro item Segundo item Terceiro item Sub-item Sub-item Quarto item Links \u00b6 \u00c9 poss\u00edvel adicionar links e hyperlinks com a seguinte sintaxe [descri\u00e7\u00e3o](url) . Por exemplo: [ UFABC ]( http://ufabc.edu.br ) criar\u00e1 um link UFABC . Imagens \u00b6 Inclua imagens usando a sintaxe ![descri\u00e7\u00e3o](url) . Por exemplo: ![ Logo Timing ]( https://www.google.com/images/branding/googlelogo/2x/googlelogo_color_272x92dp.png ) gerar\u00e1 a imagem Tabelas \u00b6 Para criar tabelas basta separar os itens com barras verticais | : | Operadores Matem\u00e1ticos - Python | Descri\u00e7\u00e3o | | :---: | :---: | | + | adi\u00e7\u00e3o | | - | subtra\u00e7\u00e3o | | * | multiplica\u00e7\u00e3o | | / | divis\u00e3o | | // | divis\u00e3o inteira | | % | Resto | | ** | Potencia\u00e7\u00e3o | Operadores Matem\u00e1ticos Python Descri\u00e7\u00e3o + adi\u00e7\u00e3o - subtra\u00e7\u00e3o * multiplica\u00e7\u00e3o / divis\u00e3o // divis\u00e3o inteira % Resto ** Potencia\u00e7\u00e3o O marcador :---: especifica o alinhamento (alinhado ao centro neste caso) da coluna. Para mais detalhes, acesse o guia do Github . Exerc\u00edcios \u00b6 Crie uma lista com os 4 \u00e1reas da matem\u00e1tica (e.g., c\u00e1lculo, estat\u00edstica) e elenque alguns t\u00f3picos abordados em cada uma dessas grandes \u00e1reas. Escreva uma pequena sin\u00f3pse sobre um filme qualquer e adicione o uma foto, cabe\u00e7alhos e um link direcionando ao IMDb . Crie uma tabela com as disciplinas que voc\u00ea mais gostou e mais detestou at\u00e9 agora. Inclua as colunas: Nome, Professor e Nota da Disciplina.","title":"Markdown"},{"location":"jupyter/markdown/#markdown","text":"Markdown \u00e9 uma linguagem de marca\u00e7\u00e3o com uma sintaxe bem pr\u00f3xima a linguagem humanas natural (portugu\u00eas, ingl\u00eas, fr\u00e2nces e etc). Os Jupyter notebooks reconhecem o markdown e o processam em HTML. Nessa se\u00e7\u00e3o, voc\u00ea ser\u00e1 apresentado a algumas caracter\u00edsticas do Markdown. Veja o guia do Github para mais informa\u00e7\u00f5es. Info Existem algumas ferramentas como o Pandoc que funcionam como conversores de arquivos. Na academia, leia-se universidades, \u00e9 comum o uso do LaTeX para cria\u00e7\u00e3o de slides, contudo a cria\u00e7\u00e3o dos chamados beamers \u00e9 lenta e relativamente trabalhosa. Para solucionar esse problema e ainda permitir slides de alta qualidade, algumas pessoas escrevem suas apresenta\u00e7\u00f5es em markdown e depois as convertem para .tex e .pdf .","title":"Markdown"},{"location":"jupyter/markdown/#texto","text":"Sa\u00edda Sintaxe it\u00e1lico *it\u00e1lico* negrito **negrito** c\u00f3digo `c\u00f3digo`","title":"Texto"},{"location":"jupyter/markdown/#cabecalhos-headings","text":"Sintaxe HTML Sa\u00edda # Cabe\u00e7alho 1 <h1> Cabe\u00e7alho 1 </h1>","title":"Cabe\u00e7alhos (Headings)"},{"location":"jupyter/markdown/#listas","text":"As listas podem ser divididas em: listas ordenadas e listas n\u00e3o-ordenadas.","title":"Listas"},{"location":"jupyter/markdown/#listas-nao-ordenadas","text":"Para criar uma lista ordenada basta adicionar um n\u00famero seguido de um ponto. Os n\u00fameros n\u00e3o precisam seguir uma ordem, mas devem iniciar com o n\u00famero um. Aumente a indenta\u00e7\u00e3o para criar sub-listas. Sintaxe HTML Sa\u00edda 1. Primeiro item 2. Segundo item 3. Terceiro item 4. Quarto item <ol> <li>Primeiro item</li> <li>Segundo item</li> <li>Terceiro item</li> <li>Quarto item</li> </ol> Primeiro item Segundo item Terceiro item Quarto item 1. Primeiro item 1. Segundo item 1. Terceiro item 1. Quarto item <ol> <li>Primeiro item</li> <li>Segundo item</li> <li>Terceiro item</li> <li>Quarto item</li> </ol> Primeiro item Segundo item Terceiro item Quarto item 1. Primeiro item 8. Segundo item 3. Terceiro item 5. Quarto item <ol> <li>Primeiro item</li> <li>Segundo item</li> <li>Terceiro item</li> <li>Quarto item</li> </ol> Primeiro item Segundo item Terceiro item Quarto item 1. Primeiro item 2. Segundo item 3. Terceiro item 1. Sub-item 2. Sub-item 4. Quarto item <ol> <li>Primeiro item</li> <li>Segundo item</li> <li>Terceiro item <ol> <li>Sub-item</li> <li>Sub-item</li> </ol> </li> <li>Quarto item</li> </ol> Primeiro item Segundo item Terceiro item Sub-item Sub-item Quarto item","title":"Listas N\u00e3o-Ordenadas"},{"location":"jupyter/markdown/#listas-ordenadas","text":"Para criar listas n\u00e3o-ordenadas basta adicionar tra\u00e7os (-), asteriscos (*), ou s\u00edmbolos de mais (+) antes dos itens. Aumente a indenta\u00e7\u00e3o para criar sub-listas. Markdown HTML Rendered Output - Primeiro item - Segundo item - Terceiro item - Quarto item <ul> <li>Primeiro item</li> <li>Segundo item</li> <li>Terceiro item</li> <li>Quarto item</li> </ul> Primeiro item Segundo item Terceiro item Quarto item * Primeiro item * Segundo item * Terceiro item * Quarto item <ul> <li>Primeiro item</li> <li>Segundo item</li> <li>Terceiro item</li> <li>Quarto item</li> </ul> Primeiro item Segundo item Terceiro item Quarto item + Primeiro item * Segundo item - Terceiro item + Quarto item <ul> <li>Primeiro item</li> <li>Segundo item</li> <li>Terceiro item</li> <li>Quarto item</li> </ul> Primeiro item Segundo item Terceiro item Quarto item - Primeiro item - Segundo item - Terceiro item - Sub-item - Sub-item - Quarto item <ul> <li>Primeiro item</li> <li>Segundo item</li> <li>Terceiro item <ul> <li>Sub-item</li> <li>Sub-item</li> </ul> </li> <li>Quarto item</li> </ul> Primeiro item Segundo item Terceiro item Sub-item Sub-item Quarto item","title":"Listas Ordenadas"},{"location":"jupyter/markdown/#links","text":"\u00c9 poss\u00edvel adicionar links e hyperlinks com a seguinte sintaxe [descri\u00e7\u00e3o](url) . Por exemplo: [ UFABC ]( http://ufabc.edu.br ) criar\u00e1 um link UFABC .","title":"Links"},{"location":"jupyter/markdown/#imagens","text":"Inclua imagens usando a sintaxe ![descri\u00e7\u00e3o](url) . Por exemplo: ![ Logo Timing ]( https://www.google.com/images/branding/googlelogo/2x/googlelogo_color_272x92dp.png ) gerar\u00e1 a imagem","title":"Imagens"},{"location":"jupyter/markdown/#tabelas","text":"Para criar tabelas basta separar os itens com barras verticais | : | Operadores Matem\u00e1ticos - Python | Descri\u00e7\u00e3o | | :---: | :---: | | + | adi\u00e7\u00e3o | | - | subtra\u00e7\u00e3o | | * | multiplica\u00e7\u00e3o | | / | divis\u00e3o | | // | divis\u00e3o inteira | | % | Resto | | ** | Potencia\u00e7\u00e3o | Operadores Matem\u00e1ticos Python Descri\u00e7\u00e3o + adi\u00e7\u00e3o - subtra\u00e7\u00e3o * multiplica\u00e7\u00e3o / divis\u00e3o // divis\u00e3o inteira % Resto ** Potencia\u00e7\u00e3o O marcador :---: especifica o alinhamento (alinhado ao centro neste caso) da coluna. Para mais detalhes, acesse o guia do Github .","title":"Tabelas"},{"location":"jupyter/markdown/#exercicios","text":"Crie uma lista com os 4 \u00e1reas da matem\u00e1tica (e.g., c\u00e1lculo, estat\u00edstica) e elenque alguns t\u00f3picos abordados em cada uma dessas grandes \u00e1reas. Escreva uma pequena sin\u00f3pse sobre um filme qualquer e adicione o uma foto, cabe\u00e7alhos e um link direcionando ao IMDb . Crie uma tabela com as disciplinas que voc\u00ea mais gostou e mais detestou at\u00e9 agora. Inclua as colunas: Nome, Professor e Nota da Disciplina.","title":"Exerc\u00edcios"},{"location":"jupyter/notebook/","text":"Jupyter \u00b6 Do site do Jupyter obtemos a seguinte defini\u00e7\u00e3o, The Jupyter Notebook is an open-source web application that allows you to create and share documents that contain live code, equations, visualizations and narrative text. Nessa se\u00e7\u00e3o, \u00e9 apresentada a interface e as fun\u00e7\u00f5es b\u00e1sicas do Jupyter Notebook. Voc\u00ea pode visualizar o tour pela interface indo em Help na barra de navega\u00e7\u00e3o. IPython \u2192 Jupyter \u2192 Google Colab O Jupyter, na verdade, foi a continua\u00e7\u00e3o de uma outra tecnologia chamada de IPython. O IPython introduziu um novo paradigma de programa\u00e7\u00e3o e analise de dados. Com esse paradigma tornava-se poss\u00edvel misturar texto, c\u00f3digo, imagens, v\u00eddeos entre v\u00e1rios outros conte\u00fados visuais ao c\u00f3digo. Os gr\u00e1ficos podiam ter seus par\u00e2metros alterados de forma interativa. Pod\u00edamos publicar os resultados obtidos em html, pdf e markdown. Nunca havia sido t\u00e3o f\u00e1cil compartilhar os resultados de an\u00e1lises e ensaios. O projeto IPython foi descontinuado, por\u00e9m o Jupyter seguiu o desenvolvendo, e agora trazendo uma roupagem nos navegadores. Hoje em dia n\u00e3o precisamos nem memso instalar o Jupyter nos nossos computadores, basta acessarmos o Google Colab . O Google Colab fica vinculado a sua conta do Google e funciona como um Google Docs para notebooks Python. Instala\u00e7\u00e3o \u00b6 A instala\u00e7\u00e3o do Jupyter Notebook \u00e9 opcional. Caso voc\u00ea n\u00e3o tenha o intuito de utilizar os seis notebooks offline, ou ainda fazer outras analises, basta acessar o Google Colab . Vantagens do Google Colab \u00b6 O Google Colab tem a vantagem de: N\u00e3o necessitar instala\u00e7\u00f5es no cliente Poder ser acessado de qualquer lugar Voc\u00ea pode destruir o ambiente python e nada acontece com a sua m\u00e1quina Caso seja necess\u00e1rio, voc\u00ea pode usar placas de v\u00eddeos e TPUs para acelerar os seus c\u00f3digos. Placas de V\u00eddeo? TPUs? As placas de v\u00eddeos ou GPUs, s\u00e3o unidades de processamento otimizadas para opera\u00e7\u00f5es com matrizes e vetores. Dessa forma, calcular somas e multiplica\u00e7\u00f5es se torna muito mais r\u00e1pido. As TPUs s\u00e3o uma evolu\u00e7\u00e3o das GPUs. Desenvolvidas pela Google, as TPUs s\u00e3o otimizadas para opera\u00e7\u00f5es com tensores agilizando ainda mais os c\u00e1lculos no mundo do deep learning . Versionamento autom\u00e1tico dos c\u00f3digos Acesso via Github C\u00e9lulas \u00b6 No Jupyter voc\u00ea se deparar\u00e1 com dois tipos principais de c\u00e9lulas: as de c\u00f3digo e as de texto (ou markdown). Para executar as c\u00e9lulas utilize SHIFT + ENTER para executar e criar uma nova c\u00e9lula, ou CTRL + ENTER para executar e permanecer na mesma c\u00e9lula. C\u00e9lulas de Markdowns podem conter: Texto Express\u00f5es em LaTeX HTML Markdown Imagens V\u00eddeos Links Basicamente, tudo que um navegador entenda Os c\u00f3digos Python s\u00e3o escritos nas c\u00e9lulas de c\u00f3digo. 1 2 3 # Dobra e mostra os n\u00fameros em [-4,4] for i in range ( - 4 , 4 ): print ( 2 * i ) -8 -6 -4 -2 0 2 4 6 Atalhos \u00b6 Os principais comandos para navegar no jupyter s\u00e3o os seguintes: Comandos Atalho Inserir C\u00e9lula a Cima a Inserir C\u00e9lula Abaixo b Copiar C\u00e9lula c Cortar C\u00e9lula x Colar C\u00e9lula v Para C\u00e9lula de C\u00f3digo y Para C\u00e9lula de Texto m Executar C\u00e9lula SHIFT + ENTER Contudo, muito provavelmente voc\u00ea usar\u00e1 muito mais o SHIFT + ENTER , o a e o x . Caso voc\u00ea queira achar mais comandos, v\u00e1 na aba de Help .","title":"Jupyter Notebook"},{"location":"jupyter/notebook/#jupyter","text":"Do site do Jupyter obtemos a seguinte defini\u00e7\u00e3o, The Jupyter Notebook is an open-source web application that allows you to create and share documents that contain live code, equations, visualizations and narrative text. Nessa se\u00e7\u00e3o, \u00e9 apresentada a interface e as fun\u00e7\u00f5es b\u00e1sicas do Jupyter Notebook. Voc\u00ea pode visualizar o tour pela interface indo em Help na barra de navega\u00e7\u00e3o. IPython \u2192 Jupyter \u2192 Google Colab O Jupyter, na verdade, foi a continua\u00e7\u00e3o de uma outra tecnologia chamada de IPython. O IPython introduziu um novo paradigma de programa\u00e7\u00e3o e analise de dados. Com esse paradigma tornava-se poss\u00edvel misturar texto, c\u00f3digo, imagens, v\u00eddeos entre v\u00e1rios outros conte\u00fados visuais ao c\u00f3digo. Os gr\u00e1ficos podiam ter seus par\u00e2metros alterados de forma interativa. Pod\u00edamos publicar os resultados obtidos em html, pdf e markdown. Nunca havia sido t\u00e3o f\u00e1cil compartilhar os resultados de an\u00e1lises e ensaios. O projeto IPython foi descontinuado, por\u00e9m o Jupyter seguiu o desenvolvendo, e agora trazendo uma roupagem nos navegadores. Hoje em dia n\u00e3o precisamos nem memso instalar o Jupyter nos nossos computadores, basta acessarmos o Google Colab . O Google Colab fica vinculado a sua conta do Google e funciona como um Google Docs para notebooks Python.","title":"Jupyter"},{"location":"jupyter/notebook/#instalacao","text":"A instala\u00e7\u00e3o do Jupyter Notebook \u00e9 opcional. Caso voc\u00ea n\u00e3o tenha o intuito de utilizar os seis notebooks offline, ou ainda fazer outras analises, basta acessar o Google Colab .","title":"Instala\u00e7\u00e3o"},{"location":"jupyter/notebook/#vantagens-do-google-colab","text":"O Google Colab tem a vantagem de: N\u00e3o necessitar instala\u00e7\u00f5es no cliente Poder ser acessado de qualquer lugar Voc\u00ea pode destruir o ambiente python e nada acontece com a sua m\u00e1quina Caso seja necess\u00e1rio, voc\u00ea pode usar placas de v\u00eddeos e TPUs para acelerar os seus c\u00f3digos. Placas de V\u00eddeo? TPUs? As placas de v\u00eddeos ou GPUs, s\u00e3o unidades de processamento otimizadas para opera\u00e7\u00f5es com matrizes e vetores. Dessa forma, calcular somas e multiplica\u00e7\u00f5es se torna muito mais r\u00e1pido. As TPUs s\u00e3o uma evolu\u00e7\u00e3o das GPUs. Desenvolvidas pela Google, as TPUs s\u00e3o otimizadas para opera\u00e7\u00f5es com tensores agilizando ainda mais os c\u00e1lculos no mundo do deep learning . Versionamento autom\u00e1tico dos c\u00f3digos Acesso via Github","title":"Vantagens do Google Colab"},{"location":"jupyter/notebook/#celulas","text":"No Jupyter voc\u00ea se deparar\u00e1 com dois tipos principais de c\u00e9lulas: as de c\u00f3digo e as de texto (ou markdown). Para executar as c\u00e9lulas utilize SHIFT + ENTER para executar e criar uma nova c\u00e9lula, ou CTRL + ENTER para executar e permanecer na mesma c\u00e9lula. C\u00e9lulas de Markdowns podem conter: Texto Express\u00f5es em LaTeX HTML Markdown Imagens V\u00eddeos Links Basicamente, tudo que um navegador entenda Os c\u00f3digos Python s\u00e3o escritos nas c\u00e9lulas de c\u00f3digo. 1 2 3 # Dobra e mostra os n\u00fameros em [-4,4] for i in range ( - 4 , 4 ): print ( 2 * i ) -8 -6 -4 -2 0 2 4 6","title":"C\u00e9lulas"},{"location":"jupyter/notebook/#atalhos","text":"Os principais comandos para navegar no jupyter s\u00e3o os seguintes: Comandos Atalho Inserir C\u00e9lula a Cima a Inserir C\u00e9lula Abaixo b Copiar C\u00e9lula c Cortar C\u00e9lula x Colar C\u00e9lula v Para C\u00e9lula de C\u00f3digo y Para C\u00e9lula de Texto m Executar C\u00e9lula SHIFT + ENTER Contudo, muito provavelmente voc\u00ea usar\u00e1 muito mais o SHIFT + ENTER , o a e o x . Caso voc\u00ea queira achar mais comandos, v\u00e1 na aba de Help .","title":"Atalhos"},{"location":"python/funcao/","text":"","title":"Fun\u00e7\u00e3o"},{"location":"python/logica/","text":"","title":"L\u00f3gica"},{"location":"python/loops/","text":"","title":"Loops"},{"location":"python/modulos/","text":"","title":"M\u00f3dulos"},{"location":"python/numeros/","text":"N\u00fameros \u00b6 Os principais tipos num\u00e9ricos do Python s\u00e3o: n\u00fameros inteiros ( int ), com ponto flutuante ( float ) e complexos ( complex ). A sintaxe dos operadores aritm\u00e9ticos s\u00e3o: Operadores Matem\u00e1ticos - Python Descri\u00e7\u00e3o + adi\u00e7\u00e3o - subtra\u00e7\u00e3o * multiplica\u00e7\u00e3o / divis\u00e3o // divis\u00e3o inteira % Resto ** Potencia\u00e7\u00e3o Podemos verificar os tipos dos objetos no Python usando a fun\u00e7\u00e3o type () 1 type ( 42 ) int Int e Float \u00b6 Um n\u00famero float, ou de ponto flutuante, \u00e9 um n\u00famero real escrito na forma decimal. O Python, como outras linguagens de programa\u00e7\u00e3o, guarda n\u00fameros int e float de forma diferente. Ao combinarmos esses tipos, resultamos em um float . Aproxima\u00e7\u00e3o de \\sqrt{2} \\sqrt{2} : 1 2 ** .5 1.4142135623730951 Podemos usar nota\u00e7\u00f5es cient\u00edficas para expressar n\u00fameros com ponto flutuante: 1 1e-6 1e-06 N\u00fameros Complexos \u00b6 Para criar n\u00fameros complexos no Python podemos: Usar a fun\u00e7\u00e3o complex () Utilizar a nota\u00e7\u00e3o j 1 ( 1 + 2 j ) + ( 1 - 4 j ) (2-2j) Se quisermos multiplicar n\u00fameros complexos: 1 ( 1 + 2 j ) * ( 1 - 2 j ) (2 + 0j) For\u00e7ando Tipos \u00b6 Podemos converter os objetos Python em outros tipos. Dessa forma, podemos converter um float para um int e vice versa. 1 type ( int ( 42.0 )) int 1 type ( float ( 42 )) float Exemplos \u00b6 Polin\u00f4mio de Taylor \u00b6 O polin\u00f4mio de Taylor de grau 6 para a fun\u00e7\u00e3o \\cos{(x)} \\cos{(x)} em x=0 \u00e9: P(x) = 1 - \\frac{x^2}{2!} + \\frac{x^4}{4!} - \\frac{x^6}{6!} P(x) = 1 - \\frac{x^2}{2!} + \\frac{x^4}{4!} - \\frac{x^6}{6!} Vamos calcular para x=0.1 x=0.1 1 1 - 0.1 ** 2 / ( 2 ) + 0.1 ** 4 / ( 4 * 3 * 2 ) - 0.1 ** 6 / ( 6 * 5 * 4 * 3 * 2 ) 0.9950041652777778 Exerc\u00edcio \u00b6 A s\u00e9rie de Taylor de \\sin{(x)} \\sin{(x)} avaliado em x=\\frac{\\pi}{2} x=\\frac{\\pi}{2} \u00e9 dado por \\sum_{n=0}^\\infty \\frac{(-1)^n}{(2n)!}\\left(x-\\frac{\\pi}{2}\\right)^{2n} \\sum_{n=0}^\\infty \\frac{(-1)^n}{(2n)!}\\left(x-\\frac{\\pi}{2}\\right)^{2n} Calcule o polin\u00f4mio de Taylor de grau 6 avaliado em x=0 x=0 : \\sin(0) \\approx 1 - \\frac{1}{2!}\\left(x-\\frac{\\pi}{2}\\right)^{2} + \\frac{1}{4!}\\left(x-\\frac{\\pi}{2}\\right)^{4} - \\frac{1}{6!}\\left(x-\\frac{\\pi}{2}\\right)^{6} \\sin(0) \\approx 1 - \\frac{1}{2!}\\left(x-\\frac{\\pi}{2}\\right)^{2} + \\frac{1}{4!}\\left(x-\\frac{\\pi}{2}\\right)^{4} - \\frac{1}{6!}\\left(x-\\frac{\\pi}{2}\\right)^{6}","title":"N\u00fameros"},{"location":"python/numeros/#numeros","text":"Os principais tipos num\u00e9ricos do Python s\u00e3o: n\u00fameros inteiros ( int ), com ponto flutuante ( float ) e complexos ( complex ). A sintaxe dos operadores aritm\u00e9ticos s\u00e3o: Operadores Matem\u00e1ticos - Python Descri\u00e7\u00e3o + adi\u00e7\u00e3o - subtra\u00e7\u00e3o * multiplica\u00e7\u00e3o / divis\u00e3o // divis\u00e3o inteira % Resto ** Potencia\u00e7\u00e3o Podemos verificar os tipos dos objetos no Python usando a fun\u00e7\u00e3o type () 1 type ( 42 ) int","title":"N\u00fameros"},{"location":"python/numeros/#int-e-float","text":"Um n\u00famero float, ou de ponto flutuante, \u00e9 um n\u00famero real escrito na forma decimal. O Python, como outras linguagens de programa\u00e7\u00e3o, guarda n\u00fameros int e float de forma diferente. Ao combinarmos esses tipos, resultamos em um float . Aproxima\u00e7\u00e3o de \\sqrt{2} \\sqrt{2} : 1 2 ** .5 1.4142135623730951 Podemos usar nota\u00e7\u00f5es cient\u00edficas para expressar n\u00fameros com ponto flutuante: 1 1e-6 1e-06","title":"Int e Float"},{"location":"python/numeros/#numeros-complexos","text":"Para criar n\u00fameros complexos no Python podemos: Usar a fun\u00e7\u00e3o complex () Utilizar a nota\u00e7\u00e3o j 1 ( 1 + 2 j ) + ( 1 - 4 j ) (2-2j) Se quisermos multiplicar n\u00fameros complexos: 1 ( 1 + 2 j ) * ( 1 - 2 j ) (2 + 0j)","title":"N\u00fameros Complexos"},{"location":"python/numeros/#forcando-tipos","text":"Podemos converter os objetos Python em outros tipos. Dessa forma, podemos converter um float para um int e vice versa. 1 type ( int ( 42.0 )) int 1 type ( float ( 42 )) float","title":"For\u00e7ando Tipos"},{"location":"python/numeros/#exemplos","text":"","title":"Exemplos"},{"location":"python/numeros/#polinomio-de-taylor","text":"O polin\u00f4mio de Taylor de grau 6 para a fun\u00e7\u00e3o \\cos{(x)} \\cos{(x)} em x=0 \u00e9: P(x) = 1 - \\frac{x^2}{2!} + \\frac{x^4}{4!} - \\frac{x^6}{6!} P(x) = 1 - \\frac{x^2}{2!} + \\frac{x^4}{4!} - \\frac{x^6}{6!} Vamos calcular para x=0.1 x=0.1 1 1 - 0.1 ** 2 / ( 2 ) + 0.1 ** 4 / ( 4 * 3 * 2 ) - 0.1 ** 6 / ( 6 * 5 * 4 * 3 * 2 ) 0.9950041652777778","title":"Polin\u00f4mio de Taylor"},{"location":"python/numeros/#exercicio","text":"A s\u00e9rie de Taylor de \\sin{(x)} \\sin{(x)} avaliado em x=\\frac{\\pi}{2} x=\\frac{\\pi}{2} \u00e9 dado por \\sum_{n=0}^\\infty \\frac{(-1)^n}{(2n)!}\\left(x-\\frac{\\pi}{2}\\right)^{2n} \\sum_{n=0}^\\infty \\frac{(-1)^n}{(2n)!}\\left(x-\\frac{\\pi}{2}\\right)^{2n} Calcule o polin\u00f4mio de Taylor de grau 6 avaliado em x=0 x=0 : \\sin(0) \\approx 1 - \\frac{1}{2!}\\left(x-\\frac{\\pi}{2}\\right)^{2} + \\frac{1}{4!}\\left(x-\\frac{\\pi}{2}\\right)^{4} - \\frac{1}{6!}\\left(x-\\frac{\\pi}{2}\\right)^{6} \\sin(0) \\approx 1 - \\frac{1}{2!}\\left(x-\\frac{\\pi}{2}\\right)^{2} + \\frac{1}{4!}\\left(x-\\frac{\\pi}{2}\\right)^{4} - \\frac{1}{6!}\\left(x-\\frac{\\pi}{2}\\right)^{6}","title":"Exerc\u00edcio"},{"location":"python/sequencias/","text":"Sequ\u00eancias \u00b6 O python possui 3 tipos de sequ\u00eancias por padr\u00e3o. Os tipos s\u00e3o: tuplas, listas e ranges. A principal diferen\u00e7a desses objetos s\u00e3o: Listas s\u00e3o mut\u00e1veis , logo podemos adicionar, remover e ainda mudar os valores j\u00e1 existentes nela. Tuplas s\u00e3o imut\u00e1veis , assim, diferentemente das listas n\u00e3o podemos remover, adicionar e nem trocar os valores j\u00e1 atribu\u00eddos a uma tupla. Ranges s\u00e3o objetos Python que geram uma lista de n\u00fameros inteiros (usados muito em loops for ) de forma eficiente, usam pouca mem\u00f3ria no computador e calculam as coisas s\u00f3 quando precisamos. Listas \u00b6 Para criarmos uma lista podemos usar os par\u00eanteses quadrados [ ... ] com os elementos/itens separados por v\u00edrgulas (\",\"). Por exemplo, para fazermos uma lista com os primeiros n\u00fameros \u00edmpares podemos fazer: impares = [ 1 , 3 , 5 , 7 , 9 , 11 , 13 ] print ( impares ) [1, 3, 5 , 7 ,9, 11, 13] Ou, por exemplo, fazer a lista dos pares ordenados de uma fun\u00e7\u00e3o de poder f(x)=x^2,\\text{para }x\\in\\{1,2,3,4,5\\} f(x)=x^2,\\text{para }x\\in\\{1,2,3,4,5\\} quadrados = [[ 1 , 1 ], [ 2 , 4 ], [ 3 , 9 ], [ 4 , 16 ], [ 5 , 25 ]] print ( quadrados ) [[1, 1], [2, 4], [3, 9], [4, 16], [5, 25]] Warning Como podemos ver, listas podem conter outras listas. Na realidades, listas podem conter qualquer tipo de dado dentro delas, sejam eles outras listas, n\u00fameros, texto, fun\u00e7\u00f5es e etc. Dessa forma, listas s\u00e3o uma forma muito \u00fatil de agrupar seus dados num local s\u00f3. Diferentemente de outras linguagens como C, Java e outras linguagens que precisamos declarar as vari\u00e1veis para alocarmos o espa\u00e7o na mem\u00f3ria, o Python n\u00e3o necessita disso. Dessa forma, listas podem ser t\u00e3o grandes quanto queiramos, ou ainda n\u00e3o conterem nada. Para criamos uma lista vazia podemos usar a seguinte sintaxe: listaVazia = [] outraListaVazia = list () Ambas as formas retornar\u00e3o uma lista vazia, cabe voc\u00ea escolher qual voc\u00ea gosta mais! \u00cdndices \u00b6 Para acessarmos os itens dentro de uma lista podemos usar uma indexa\u00e7\u00e3o da seguinte forma: x = [ 1 , 2 , 3 , 4 , 5 ] print ( x [ 0 ]) 1 Como podemos ver, as listas come\u00e7am pelo \u00edndice 0. y = [ 2 , 4 , 6 , 8 , 10 ] print ( y [ - 1 ]) print ( y [ - 2 ]) 10 8 Se usarmos ind\u00edces negativos, o python come\u00e7a a indexar do fim para o in\u00edcio da lista. Devido a listas serem mut\u00e1veis podemos alterar o seu conte\u00fado somente mudando o valor num dado \u00edndice: y = [ 2 , 4 , 5 , 8 , 10 ] print ( y ) y [ 2 ] = 6 print ( y ) [2, 4, 5, 8, 10] [2, 4, 6, 8, 10] E, para acessarmos ind\u00edces duplos basta acrescentarmos mais um \u00edndice ap\u00f3s o primeiro: quadrados = [[ 1 , 1 ], [ 2 , 4 ], [ 3 , 9 ], [ 4 , 16 ], [ 5 , 25 ]] print ( quadrados [ 3 ][ 1 ]) 16 Criando Fatias \u00b6","title":"Sequ\u00eancias"},{"location":"python/sequencias/#sequencias","text":"O python possui 3 tipos de sequ\u00eancias por padr\u00e3o. Os tipos s\u00e3o: tuplas, listas e ranges. A principal diferen\u00e7a desses objetos s\u00e3o: Listas s\u00e3o mut\u00e1veis , logo podemos adicionar, remover e ainda mudar os valores j\u00e1 existentes nela. Tuplas s\u00e3o imut\u00e1veis , assim, diferentemente das listas n\u00e3o podemos remover, adicionar e nem trocar os valores j\u00e1 atribu\u00eddos a uma tupla. Ranges s\u00e3o objetos Python que geram uma lista de n\u00fameros inteiros (usados muito em loops for ) de forma eficiente, usam pouca mem\u00f3ria no computador e calculam as coisas s\u00f3 quando precisamos.","title":"Sequ\u00eancias"},{"location":"python/sequencias/#listas","text":"Para criarmos uma lista podemos usar os par\u00eanteses quadrados [ ... ] com os elementos/itens separados por v\u00edrgulas (\",\"). Por exemplo, para fazermos uma lista com os primeiros n\u00fameros \u00edmpares podemos fazer: impares = [ 1 , 3 , 5 , 7 , 9 , 11 , 13 ] print ( impares ) [1, 3, 5 , 7 ,9, 11, 13] Ou, por exemplo, fazer a lista dos pares ordenados de uma fun\u00e7\u00e3o de poder f(x)=x^2,\\text{para }x\\in\\{1,2,3,4,5\\} f(x)=x^2,\\text{para }x\\in\\{1,2,3,4,5\\} quadrados = [[ 1 , 1 ], [ 2 , 4 ], [ 3 , 9 ], [ 4 , 16 ], [ 5 , 25 ]] print ( quadrados ) [[1, 1], [2, 4], [3, 9], [4, 16], [5, 25]] Warning Como podemos ver, listas podem conter outras listas. Na realidades, listas podem conter qualquer tipo de dado dentro delas, sejam eles outras listas, n\u00fameros, texto, fun\u00e7\u00f5es e etc. Dessa forma, listas s\u00e3o uma forma muito \u00fatil de agrupar seus dados num local s\u00f3. Diferentemente de outras linguagens como C, Java e outras linguagens que precisamos declarar as vari\u00e1veis para alocarmos o espa\u00e7o na mem\u00f3ria, o Python n\u00e3o necessita disso. Dessa forma, listas podem ser t\u00e3o grandes quanto queiramos, ou ainda n\u00e3o conterem nada. Para criamos uma lista vazia podemos usar a seguinte sintaxe: listaVazia = [] outraListaVazia = list () Ambas as formas retornar\u00e3o uma lista vazia, cabe voc\u00ea escolher qual voc\u00ea gosta mais!","title":"Listas"},{"location":"python/sequencias/#indices","text":"Para acessarmos os itens dentro de uma lista podemos usar uma indexa\u00e7\u00e3o da seguinte forma: x = [ 1 , 2 , 3 , 4 , 5 ] print ( x [ 0 ]) 1 Como podemos ver, as listas come\u00e7am pelo \u00edndice 0. y = [ 2 , 4 , 6 , 8 , 10 ] print ( y [ - 1 ]) print ( y [ - 2 ]) 10 8 Se usarmos ind\u00edces negativos, o python come\u00e7a a indexar do fim para o in\u00edcio da lista. Devido a listas serem mut\u00e1veis podemos alterar o seu conte\u00fado somente mudando o valor num dado \u00edndice: y = [ 2 , 4 , 5 , 8 , 10 ] print ( y ) y [ 2 ] = 6 print ( y ) [2, 4, 5, 8, 10] [2, 4, 6, 8, 10] E, para acessarmos ind\u00edces duplos basta acrescentarmos mais um \u00edndice ap\u00f3s o primeiro: quadrados = [[ 1 , 1 ], [ 2 , 4 ], [ 3 , 9 ], [ 4 , 16 ], [ 5 , 25 ]] print ( quadrados [ 3 ][ 1 ]) 16","title":"\u00cdndices"},{"location":"python/sequencias/#criando-fatias","text":"","title":"Criando Fatias"},{"location":"python/variaveis/","text":"Vari\u00e1veis \u00b6 Assim como as vari\u00e1veis x x e y y na matem\u00e1tica, podemos usar vari\u00e1veis na programa\u00e7\u00e3o. Agora vamos aprender a como facilitar as nossas contas. Atribuindo Valores \u00c0s Vari\u00e1veis \u00b6 Para atribuir um valor a uma vari\u00e1vel voc\u00ea usar\u00e1 o operador = . Por exemplo, n\u00f3s atribu\u00edmos o valor 42 \u00e0 vari\u00e1vel x da seguinte forma: 1 x = 42 Ao atribuirmos o valor, n\u00e3o temos nenhuma sa\u00edda. Para visualizar o valor atribu\u00eddo \u00e0 vari\u00e1vel x podemos usar a fun\u00e7\u00e3o print () . 1 print ( x ) 42 Vamos calcular a ra\u00edz da fun\u00e7\u00e3o f(x) = x^2 - 10x + 16 f(x) = x^2 - 10x + 16 1 2 3 4 5 delta = ( - 10 ) ** 2 - 4 * 1 * 16 x1 = ( 10 + delta ** .5 ) / 2 * 1 x2 = ( 10 - delta ** .5 ) / 2 * 1 print ( x1 ) print ( x2 ) 8.0 2.0 Formatando Sa\u00eddas \u00b6 \u00c9 comum utilizarmos a fun\u00e7\u00e3o print () para mostrarmos alertas, visualizarmos vari\u00e1veis ou ainda, debbugar c\u00f3digos. Por\u00e9m, podemos melhorar essas sa\u00eddas. O Python traz a possibilidade de formatarmos as sa\u00eddas. As strings ( str ), isso \u00e9, os textos no Python s\u00e3o um outro tipo de objeto. Os textos, diferentemente dos n\u00fameros precisam estar entre aspas para que o Python saiba que aquilo \u00e9 um texto e n\u00e3o vari\u00e1veis. Por exemplo, se quisermos falar um Ol\u00e1, mundo! deveremos fazer da seguinte forma: 1 print ( \"Ol\u00e1, mundo!\" ) Ol\u00e1, mundo\" Nota\u00e7\u00e3o de Strings No python temos algumas formas de declarar uma string. Podemos fazer isso aspas duplas \"Ol\u00e1\" ou com aspas simples 'Mundo!' . Se quisermos declarar um texto com mais de uma linha podemos usar podemos fazer da seguinte forma: 1 2 3 4 5 ''' Ol\u00e1, mundo! Tudo bem com voc\u00eas? ''' Assim como antes, podemos usar aspas simples ou aspas duplas. Um jeito f\u00e1cil de formatarmos sa\u00eddas \u00e9 pa seguinte forma: 1 print ( f 'Ra\u00edz 1: { x1 } \\n Ra\u00edz 2: { x2 } ' ) Ra\u00edz 1: 8.0 Ra\u00edz 2: 2.0 Para entendermos o que est\u00e1 acontecendo vamos por partes. A letra f antes da aspa simples indica que \u00e9 uma string que ser\u00e1 formatada. As chaves {} s\u00e3o os chamados placeholders, a fun\u00e7\u00e3o \u00e9 indicar que ali ter\u00e1 uma vari\u00e1vel. O \\ n simplesmente indica uma quebra de linha, como se tiv\u00e9ssemos apertado o ENTER no teclado. Bug \u00c9 muito comum misturarmos tipos no Python e algumas vezes ele acaba quebrando. Por exemplo: 1 print ( '2' + 1 ) Traceback (most recent call last): File \"<stdin>\", line 1, in <module> TypeError: can only concatenate str (not \"int\") to str Esse error acontece pois estamos tentando somar um texto, '2' , com um n\u00famero, 1 . Caso queiramos juntar esses valores, ou concaten\u00e1-los, podemos fazer o seguinte: 1 2 3 print ( '2' , 1 ) print ( '2' + str ( 1 )) print ( f '2 { 1 } ' ) 2 1 21 21 J\u00e1 se quisermos som\u00e1-los: 1 print ( int ( '2' ) + 1 ) 3 Evite Esses Nomes \u00b6 \u00c9 uma boa pr\u00e1tica darmos nomes que descrevam os valores guardados nas vari\u00e1veis. Contudo, existem algumas palavras que n\u00e3o devem ser usadas como nomes de vari\u00e1veis. Essas palavras tem significados especiais no Python. Palavras Reservadas \u00b6 Abaixo est\u00e3o algumas palavras reservadas no Python . O Python ir\u00e1 retornar um erro caso voc\u00ea tente atribuir um valor a qualquer uma dessas palavras. False class finally is return None continue for lambda try True def from nonlocal while and del global not with as elif if or yield assert else import pass break except in raise Como s\u00e3o palavras em ingl\u00eas, caso voc\u00ea d\u00ea nomes somente em portugu\u00eas jamais ter\u00e1 problemas. Todavia, caso voc\u00ea tenha o intuito de disponibilizar seus c\u00f3digos depois, \u00e9 um boa pr\u00e1tica dar nomes em ingl\u00eas. Fun\u00e7\u00f5es Nativas \u00b6 Al\u00e9m dessas palavras reservadas, o Python possui algumas fun\u00e7\u00f5es nativas. N\u00e3o use esses nomes para atribuir vari\u00e1veis, caso contr\u00e1rio, voc\u00ea perder\u00e1 a refer\u00eancia dessas vari\u00e1veis. Por exemplo, n\u00e3o use sum , min , max , list ou sorted como nomes de vari\u00e1veis. Veja a lista completa de fun\u00e7\u00f5es nativas .","title":"Vari\u00e1veis"},{"location":"python/variaveis/#variaveis","text":"Assim como as vari\u00e1veis x x e y y na matem\u00e1tica, podemos usar vari\u00e1veis na programa\u00e7\u00e3o. Agora vamos aprender a como facilitar as nossas contas.","title":"Vari\u00e1veis"},{"location":"python/variaveis/#atribuindo-valores-as-variaveis","text":"Para atribuir um valor a uma vari\u00e1vel voc\u00ea usar\u00e1 o operador = . Por exemplo, n\u00f3s atribu\u00edmos o valor 42 \u00e0 vari\u00e1vel x da seguinte forma: 1 x = 42 Ao atribuirmos o valor, n\u00e3o temos nenhuma sa\u00edda. Para visualizar o valor atribu\u00eddo \u00e0 vari\u00e1vel x podemos usar a fun\u00e7\u00e3o print () . 1 print ( x ) 42 Vamos calcular a ra\u00edz da fun\u00e7\u00e3o f(x) = x^2 - 10x + 16 f(x) = x^2 - 10x + 16 1 2 3 4 5 delta = ( - 10 ) ** 2 - 4 * 1 * 16 x1 = ( 10 + delta ** .5 ) / 2 * 1 x2 = ( 10 - delta ** .5 ) / 2 * 1 print ( x1 ) print ( x2 ) 8.0 2.0","title":"Atribuindo Valores \u00c0s Vari\u00e1veis"},{"location":"python/variaveis/#formatando-saidas","text":"\u00c9 comum utilizarmos a fun\u00e7\u00e3o print () para mostrarmos alertas, visualizarmos vari\u00e1veis ou ainda, debbugar c\u00f3digos. Por\u00e9m, podemos melhorar essas sa\u00eddas. O Python traz a possibilidade de formatarmos as sa\u00eddas. As strings ( str ), isso \u00e9, os textos no Python s\u00e3o um outro tipo de objeto. Os textos, diferentemente dos n\u00fameros precisam estar entre aspas para que o Python saiba que aquilo \u00e9 um texto e n\u00e3o vari\u00e1veis. Por exemplo, se quisermos falar um Ol\u00e1, mundo! deveremos fazer da seguinte forma: 1 print ( \"Ol\u00e1, mundo!\" ) Ol\u00e1, mundo\" Nota\u00e7\u00e3o de Strings No python temos algumas formas de declarar uma string. Podemos fazer isso aspas duplas \"Ol\u00e1\" ou com aspas simples 'Mundo!' . Se quisermos declarar um texto com mais de uma linha podemos usar podemos fazer da seguinte forma: 1 2 3 4 5 ''' Ol\u00e1, mundo! Tudo bem com voc\u00eas? ''' Assim como antes, podemos usar aspas simples ou aspas duplas. Um jeito f\u00e1cil de formatarmos sa\u00eddas \u00e9 pa seguinte forma: 1 print ( f 'Ra\u00edz 1: { x1 } \\n Ra\u00edz 2: { x2 } ' ) Ra\u00edz 1: 8.0 Ra\u00edz 2: 2.0 Para entendermos o que est\u00e1 acontecendo vamos por partes. A letra f antes da aspa simples indica que \u00e9 uma string que ser\u00e1 formatada. As chaves {} s\u00e3o os chamados placeholders, a fun\u00e7\u00e3o \u00e9 indicar que ali ter\u00e1 uma vari\u00e1vel. O \\ n simplesmente indica uma quebra de linha, como se tiv\u00e9ssemos apertado o ENTER no teclado. Bug \u00c9 muito comum misturarmos tipos no Python e algumas vezes ele acaba quebrando. Por exemplo: 1 print ( '2' + 1 ) Traceback (most recent call last): File \"<stdin>\", line 1, in <module> TypeError: can only concatenate str (not \"int\") to str Esse error acontece pois estamos tentando somar um texto, '2' , com um n\u00famero, 1 . Caso queiramos juntar esses valores, ou concaten\u00e1-los, podemos fazer o seguinte: 1 2 3 print ( '2' , 1 ) print ( '2' + str ( 1 )) print ( f '2 { 1 } ' ) 2 1 21 21 J\u00e1 se quisermos som\u00e1-los: 1 print ( int ( '2' ) + 1 ) 3","title":"Formatando Sa\u00eddas"},{"location":"python/variaveis/#evite-esses-nomes","text":"\u00c9 uma boa pr\u00e1tica darmos nomes que descrevam os valores guardados nas vari\u00e1veis. Contudo, existem algumas palavras que n\u00e3o devem ser usadas como nomes de vari\u00e1veis. Essas palavras tem significados especiais no Python.","title":"Evite Esses Nomes"},{"location":"python/variaveis/#palavras-reservadas","text":"Abaixo est\u00e3o algumas palavras reservadas no Python . O Python ir\u00e1 retornar um erro caso voc\u00ea tente atribuir um valor a qualquer uma dessas palavras. False class finally is return None continue for lambda try True def from nonlocal while and del global not with as elif if or yield assert else import pass break except in raise Como s\u00e3o palavras em ingl\u00eas, caso voc\u00ea d\u00ea nomes somente em portugu\u00eas jamais ter\u00e1 problemas. Todavia, caso voc\u00ea tenha o intuito de disponibilizar seus c\u00f3digos depois, \u00e9 um boa pr\u00e1tica dar nomes em ingl\u00eas.","title":"Palavras Reservadas"},{"location":"python/variaveis/#funcoes-nativas","text":"Al\u00e9m dessas palavras reservadas, o Python possui algumas fun\u00e7\u00f5es nativas. N\u00e3o use esses nomes para atribuir vari\u00e1veis, caso contr\u00e1rio, voc\u00ea perder\u00e1 a refer\u00eancia dessas vari\u00e1veis. Por exemplo, n\u00e3o use sum , min , max , list ou sorted como nomes de vari\u00e1veis. Veja a lista completa de fun\u00e7\u00f5es nativas .","title":"Fun\u00e7\u00f5es Nativas"},{"location":"scipy/matplotlib/","text":"","title":"Matplotlib"},{"location":"scipy/numpy/","text":"","title":"Numpy"},{"location":"scipy/pandas/","text":"","title":"Pandas"},{"location":"scipy/scipy/","text":"","title":"Scipy"}]}